# Manpages for commands and their aliases
function man() {
    # Check if the command is an alias
    if alias "$1" &>/dev/null; then
        # If it's an alias, expand it and use the first word as the command
        local cmd=$(alias "$1" | sed "s/.*='\(.*\)'/\1/" | awk '{print $1}')
        command man "$cmd" "$@"
    else
        # Otherwise, just use the original man command
        command man "$@"
    fi
}

# Update dotfiles
function cfg-update() {
  MSG="Update for $(date +%d.%m.%y)" && cfg log --grep="$MSG" --oneline | grep -q . && cfg commit --all --amend --no-edit || cfg commit -m "$MSG"
}

# Delete all merged branches
function gbda() {
  git branch --no-color --merged | command grep -vE "^([+*]|\s*($(git_main_branch)|$(git_develop_branch))\s*$)" | command xargs git branch --delete 2>/dev/null
}

# fshow - git commit browser
# source: https://gist.github.com/junegunn/f4fca918e937e6bf5bad
# TODO: configure
fshow() {
  local out sha q
  while out=$(
    git log --graph --color=always \
      --format="%C(auto)%h%d %s %C(black)%C(bold)%cr" |
    fzf --ansi --multi --no-sort --reverse --query="$q" --print-query); do
    q=$(head -1 <<< "$out")
    while read sha; do
      [ -n "$sha" ] && git show --color=always $sha | less -R
    done < <(sed '1d;s/^[^a-z0-9]*//;/^$/d' <<< "$out" | awk '{print $1}')
  done
}

setup-credentials() {
  kinit
  mwinit -s
  ssh-add
  ssh clouddesk -t 'kinit -f && mwinit -s -o && ssh-add'
  ada cred update --once
  aws codeartifact login --region us-west-2 --tool npm --domain amazon --domain-owner 730335472693 --repository shared
  screen -S ninja -d -m nohup ninja-dev-sync
}
