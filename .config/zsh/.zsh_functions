# Manpages for commands and their aliases
function man() {
  if [[ -v "aliases[$1]" ]]; then
    local alias_parts=( ${(z)aliases[$1]} )
    local cmd=${alias_parts[1]}
    command man "$cmd" "${@:2}"
  else
    command man "$@"
  fi
}

# Update dotfiles
function cfg-update() {
  MSG="Update for $(date +%d.%m.%y)" && cfg log --grep="$MSG" --oneline | grep -q . && cfg commit --all --amend --no-edit || cfg commit -m "$MSG"
}

# Delete all merged branches
function gbda() {
  git branch --no-color --merged | command grep -vE "^([+*]|\s*($(git_main_branch)|$(git_develop_branch))\s*$)" | command xargs git branch --delete 2>/dev/null
}

# fshow - git commit browser
# source: https://gist.github.com/junegunn/f4fca918e937e6bf5bad
# TODO: configure
fshow() {
  local out sha q
  while out=$(
    git log --graph --color=always \
      --format="%C(auto)%h%d %s %C(black)%C(bold)%cr" |
    fzf --ansi --multi --no-sort --reverse --query="$q" --print-query); do
    q=$(head -1 <<< "$out")
    while read sha; do
      [ -n "$sha" ] && git show --color=always $sha | less -R
    done < <(sed '1d;s/^[^a-z0-9]*//;/^$/d' <<< "$out" | awk '{print $1}')
  done
}
